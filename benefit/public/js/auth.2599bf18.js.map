{"version":3,"file":"js/auth.2599bf18.js","mappings":"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","sources":["webpack://benefit/./src/components/AuthForm.vue","webpack://benefit/./src/components/AuthForm.vue?cd15"],"sourcesContent":["<template>\r\n  <div class=\"auth-form container mx-auto max-w-md p-6 bg-white shadow-md rounded-lg\">\r\n    <h2 class=\"text-2xl font-bold mb-6\">{{ isLogin ? 'Login' : 'Register' }}</h2>\r\n    <Form @submit=\"handleSubmit\" :validation-schema=\"schema\">\r\n      <!-- Email field -->\r\n      <div class=\"mb-4\">\r\n        <label for=\"email\" class=\"block text-sm font-medium text-gray-700\">Email:</label>\r\n        <Field name=\"email\" type=\"email\" id=\"email\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n        <ErrorMessage name=\"email\" class=\"text-red-500 text-xs mt-1\" />\r\n      </div>\r\n\r\n      <!-- Password field -->\r\n      <div class=\"mb-4\">\r\n        <label for=\"password\" class=\"block text-sm font-medium text-gray-700\">Password:</label>\r\n        <Field name=\"password\" type=\"password\" id=\"password\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n        <ErrorMessage name=\"password\" class=\"text-red-500 text-xs mt-1\" />\r\n      </div>\r\n\r\n      <!-- Confirm Password field (only for registration) -->\r\n      <div v-if=\"!isLogin\" class=\"mb-4\">\r\n        <label for=\"password_confirmation\" class=\"block text-sm font-medium text-gray-700\">Confirm Password:</label>\r\n        <Field name=\"password_confirmation\" type=\"password\" id=\"password_confirmation\" class=\"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-300 focus:ring focus:ring-indigo-200 focus:ring-opacity-50\" />\r\n        <ErrorMessage name=\"password_confirmation\" class=\"text-red-500 text-xs mt-1\" />\r\n      </div>\r\n\r\n      <!-- Submit button -->\r\n      <button type=\"submit\" :disabled=\"isSubmitting\" class=\"w-full px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 disabled:opacity-50\">\r\n        {{ isLogin ? 'Login' : 'Register' }}\r\n      </button>\r\n    </Form>\r\n\r\n    <!-- Toggle between Login and Register -->\r\n    <p class=\"mt-4 text-center text-sm text-gray-600\">\r\n      {{ isLogin ? \"Don't have an account?\" : \"Already have an account?\" }}\r\n      <a href=\"#\" @click.prevent=\"toggleAuthMode\" class=\"font-medium text-indigo-600 hover:text-indigo-500\">\r\n        {{ isLogin ? 'Register' : 'Login' }}\r\n      </a>\r\n    </p>\r\n\r\n    <!-- Error message display -->\r\n    <p v-if=\"errorMsg\" class=\"mt-4 text-center text-sm text-red-600\">{{ errorMsg }}</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, computed } from 'vue';\r\nimport { useStore } from 'vuex';\r\nimport { useRouter } from 'vue-router';\r\nimport { Form, Field, ErrorMessage } from 'vee-validate';\r\nimport * as yup from 'yup';\r\n\r\nexport default {\r\n  components: { Form, Field, ErrorMessage },\r\n  setup() {\r\n    const store = useStore();\r\n    const router = useRouter();\r\n    const isLogin = ref(true);\r\n    const isSubmitting = ref(false);\r\n    const errorMsg = ref('');\r\n\r\n    const schema = computed(() => {\r\n      const baseSchema = {\r\n        email: yup.string().required('Email is required').email('Invalid email format'),\r\n        password: yup.string().required('Password is required').min(6, 'Password must be at least 6 characters'),\r\n      };\r\n\r\n      if (!isLogin.value) {\r\n        baseSchema.password_confirmation = yup.string()\r\n          .required('Password confirmation is required')\r\n          .oneOf([yup.ref('password'), null], 'Passwords must match');\r\n      }\r\n\r\n      return yup.object().shape(baseSchema);\r\n    });\r\n\r\n    const handleSubmit = async (values) => {\r\n      isSubmitting.value = true;\r\n      errorMsg.value = '';\r\n      try {\r\n        if (isLogin.value) {\r\n          await store.dispatch('auth/login', values);\r\n        } else {\r\n          await store.dispatch('auth/register', values);\r\n        }\r\n        router.push('/dashboard');\r\n      } catch (error) {\r\n        console.error(isLogin.value ? 'Login failed:' : 'Registration failed:', error);\r\n        errorMsg.value = error.response?.data?.message || 'An error occurred. Please try again.'; // Improved error handling\r\n      } finally {\r\n        isSubmitting.value = false;\r\n      }\r\n    };\r\n\r\n    const toggleAuthMode = () => {\r\n      isLogin.value = !isLogin.value;\r\n      errorMsg.value = ''; // Clear any existing error messages\r\n    };\r\n\r\n    return {\r\n      isLogin,\r\n      schema,\r\n      handleSubmit,\r\n      toggleAuthMode,\r\n      isSubmitting,\r\n      errorMsg,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./AuthForm.vue?vue&type=template&id=7fe8a8d8\"\nimport script from \"./AuthForm.vue?vue&type=script&lang=js\"\nexport * from \"./AuthForm.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_toDisplayString","$setup","isLogin","_createVNode","_component_Form","onSubmit","handleSubmit","schema","default","_withCtx","_hoisted_3","for","_component_Field","name","type","id","_component_ErrorMessage","_hoisted_4","_createCommentVNode","_hoisted_5","disabled","isSubmitting","_hoisted_6","_","_hoisted_7","_createTextVNode","href","onClick","_cache","_withModifiers","args","toggleAuthMode","errorMsg","_hoisted_8","components","Form","Field","ErrorMessage","setup","store","useStore","router","useRouter","ref","computed","baseSchema","email","yup","required","password","min","value","password_confirmation","oneOf","shape","async","dispatch","values","push","error","console","response","data","message","__exports__","render"],"sourceRoot":""}