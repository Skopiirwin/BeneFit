"use strict";(self["webpackChunkbenefit"]=self["webpackChunkbenefit"]||[]).push([[1515],{30522:function(e,o,t){t.d(o,{lQ:function(){return b},mn:function(){return f}});t(66652);var r=t(46574),n=t(77084),s=t(46669),c=t(56734);
/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
const l="tensorflowjs",a=1,d="models_store",i="model_info_store";function u(){if(!(0,r._K)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"===typeof window?self:window,o=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==o)throw new Error("The current browser does not appear to support IndexedDB.");return o}function h(e){const o=e.result;o.createObjectStore(d,{keyPath:"modelPath"}),o.createObjectStore(i,{keyPath:"modelPath"})}class f{constructor(e){if(this.indexedDB=u(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,o){return new Promise(((e,t)=>{const r=this.indexedDB.open(l,a);r.onupgradeneeded=()=>h(r),r.onsuccess=()=>{const s=r.result;if(null==o){const o=s.transaction(d,"readonly"),r=o.objectStore(d),n=r.get(this.modelPath);n.onsuccess=()=>{if(null==n.result)return s.close(),t(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(n.result.modelArtifacts)},n.onerror=e=>(s.close(),t(n.error)),o.oncomplete=()=>s.close()}else{o.weightData=c.D.join(o.weightData);const r=(0,n.oR)(o),a=s.transaction(i,"readwrite");let u,h,f=a.objectStore(i);try{u=f.put({modelPath:this.modelPath,modelArtifactsInfo:r})}catch(l){return t(l)}u.onsuccess=()=>{h=s.transaction(d,"readwrite");const n=h.objectStore(d);let c;try{c=n.put({modelPath:this.modelPath,modelArtifacts:o,modelArtifactsInfo:r})}catch(l){return t(l)}c.onsuccess=()=>e({modelArtifactsInfo:r}),c.onerror=e=>{f=a.objectStore(i);const o=f.delete(this.modelPath);o.onsuccess=()=>(s.close(),t(c.error)),o.onerror=e=>(s.close(),t(c.error))}},u.onerror=e=>(s.close(),t(u.error)),a.oncomplete=()=>{null==h?s.close():h.oncomplete=()=>s.close()}}},r.onerror=e=>t(r.error)}))}}f.URL_SCHEME="indexeddb://";const m=e=>(0,r._K)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(f.URL_SCHEME)?w(e.slice(f.URL_SCHEME.length)):null;function w(e){return new f(e)}function p(e){return e.startsWith(f.URL_SCHEME)?e.slice(f.URL_SCHEME.length):e}s.bM.registerSaveRouter(m),s.bM.registerLoadRouter(m);class b{constructor(){this.indexedDB=u()}async listModels(){return new Promise(((e,o)=>{const t=this.indexedDB.open(l,a);t.onupgradeneeded=()=>h(t),t.onsuccess=()=>{const r=t.result,n=r.transaction(i,"readonly"),s=n.objectStore(i),c=s.getAll();c.onsuccess=()=>{const o={};for(const e of c.result)o[e.modelPath]=e.modelArtifactsInfo;e(o)},c.onerror=e=>(r.close(),o(c.error)),n.oncomplete=()=>r.close()},t.onerror=e=>o(t.error)}))}async removeModel(e){return e=p(e),new Promise(((o,t)=>{const r=this.indexedDB.open(l,a);r.onupgradeneeded=()=>h(r),r.onsuccess=()=>{const n=r.result,s=n.transaction(i,"readwrite"),c=s.objectStore(i),l=c.get(e);let a;l.onsuccess=()=>{if(null==l.result)return n.close(),t(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=c.delete(e),s=()=>{a=n.transaction(d,"readwrite");const r=a.objectStore(d),s=r.delete(e);s.onsuccess=()=>o(l.result.modelArtifactsInfo),s.onerror=e=>t(l.error)};r.onsuccess=s,r.onerror=e=>(s(),n.close(),t(l.error))}},l.onerror=e=>(n.close(),t(l.error)),s.oncomplete=()=>{null==a?n.close():a.oncomplete=()=>n.close()}},r.onerror=e=>t(r.error)}))}}},17890:function(e,o,t){t(30522),t(76745),t(4908),t(47894),t(77084),t(9250),t(46669),t(66519),t(56734),t(66235)}}]);
//# sourceMappingURL=chunk-vendors-6e218c96.a8aed318.js.map